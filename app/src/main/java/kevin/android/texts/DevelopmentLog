[Tuesday, August 17th, 2021]
    - Room architecture works (DAO, Repository, Database w/ prepopulating)
[Wednesday, August 18th, 2021]
    - MainActivity observes LiveData for sentMessages and upcomingMessages
    - working recycler view with two ViewHolder types: NPCMessage and MyMessage
    - started working on PlayThread
        - NPC messages are loaded immediately
        - My messages are loaded in after button click on sendButton
        - no more messages are loaded by the end of the group
[Thursday, August 19th, 2021]
    - ConversationFragment now successfully navigates to ChatFragment and sends a Conversation object
[Friday, August 20st, 2021]
    - MessageDatabase is now pre-populated using JSON asset
    - conversations now select the appropriate messages
[Sunday, August 22nd, 2021]
    - replaced PlayThread with PlayRunnable
        - fixed issue with the Runnable -- thought there was a problem with database pre-populating, but
          it was due to many PlayThreads being instantiated
[Monday, August 23rd, 2021]
    - Conversation can now be sent back from ChatFragment to ConversationFragment
    - corresponding Conversation object now updated in the ConversationDatabase
[Tuesday, August 24th, 2021]
    - fixed issue where different conversations loaded the same messages of player 1
    - fixed issue where messages of player 2 would not render to the screen
    - fixed Runnable timing issues (messages would sometimes load in at the wrong time)
[Wednesday, August 25th, 2021]
    - conversation can now update the last message live using SharedViewModel
    - last message is bolded if it belongs to an npc
[Thursday, August 26th, 2021]
    - tried these, but ended up removing them:
        - changed all "state" to "conversation.getChatState()" in ChatFragment, but this caused an issue where
          if the chat was left on "choose," the PlayRunnable would never assign the next message
        - made the SharedViewModel store the only instance of the conversation in chat, but updating fields
          of an object does not count as an update to LiveData
    - implemented groups
    - removed sending conversation object back to ConversationFragment and the observer of the lastMessage field
        - ConversationFragment now only observes the active conversation object
        - this observer updates the group number and the last message
[Saturday, August 28th, 2021]
    - tried to fix the issue of when to create new Threads, without success
    - the plan is now to freeze the thread every time the fragment is closed
    - Thread now freezes whenever the Fragment is closed
    - a new one is created whenever the fragment opens
[Sunday, August 29th, 2021]
    - implemented ChatInfoFragments and Menu
    - first and last name can now be updated and saved
    - fixed a bug where PlayRunnable did not start when ChatFragment was opened
    - started working on blocks
        - if a key my message is found, save the decision to GameManager and save the block to return to
        - if a block comes, get the saved decision from GameManager
        - update the Conversation's current block
        - if the block ends, return to the original block (if any)
[Tuesday, August 31st, 2021]
    - tried getting blocks to work:
        - if we come across a block, update a LiveData field in the messageViewModel
        - this will then fetch the upcoming messages again
        - some messages after the block may come in while the block is loading; implemented a stall (not tested)
[Wednesday, September 1st, 2021]
    - worked on blocks.
        - added LiveData current block to sentMessages
        - added preceding blocks List in GameManager
            - move this to the individual conversation


TODO
    - figure out how blocks may work
        - return to the starter block after there are no more messages
        - how about we just make the preceding blocks a stack
    - load the conversation json
    - setup player info on first download
    - backgrounds and sounds
    - figure out when to advance the group