[Tuesday, August 17th, 2021]
    - Room architecture works (DAO, Repository, Database w/ pre-populating)
[Wednesday, August 18th, 2021]
    - MainActivity observes LiveData for sentMessages and upcomingMessages
    - working recycler view with two ViewHolder types: NPCMessage and MyMessage
    - started working on PlayThread
        - NPC messages are loaded immediately
        - My messages are loaded in after button click on sendButton
        - no more messages are loaded by the end of the group
[Thursday, August 19th, 2021]
    - ConversationFragment now successfully navigates to ChatFragment and sends a Conversation object
[Friday, August 20th, 2021]
    - MessageDatabase is now pre-populated using JSON asset
    - conversations now select the appropriate messages
[Sunday, August 22nd, 2021]
    - replaced PlayThread with PlayRunnable
        - fixed issue with the Runnable -- thought there was a problem with database pre-populating, but
          it was due to many PlayThreads being instantiated
[Monday, August 23rd, 2021]
    - Conversation can now be sent back from ChatFragment to ConversationFragment
    - corresponding Conversation object now updated in the ConversationDatabase
[Tuesday, August 24th, 2021]
    - fixed issue where different conversations loaded the same messages of player 1
    - fixed issue where messages of player 2 would not render to the screen
    - fixed Runnable timing issues (messages would sometimes load in at the wrong time)
[Wednesday, August 25th, 2021]
    - conversation can now update the last message live using SharedViewModel
    - last message is bolded if it belongs to an npc
[Thursday, August 26th, 2021]
    - tried these, but ended up removing them:
        - changed all "state" to "conversation.getChatState()" in ChatFragment, but this caused an issue where
          if the chat was left on "choose," the PlayRunnable would never assign the next message
        - made the SharedViewModel store the only instance of the conversation in chat, but updating fields
          of an object does not count as an update to LiveData
    - implemented groups
    - removed sending conversation object back to ConversationFragment and the observer of the lastMessage field
        - ConversationFragment now only observes the active conversation object
        - this observer updates the group number and the last message
[Saturday, August 28th, 2021]
    - tried to fix the issue of when to create new Threads, without success
    - the plan is now to freeze the thread every time the fragment is closed
    - Thread now freezes whenever the Fragment is closed
    - a new one is created whenever the fragment opens
[Sunday, August 29th, 2021]
    - implemented ChatInfoFragments and Menu
    - first and last name can now be updated and saved
    - fixed a bug where PlayRunnable did not start when ChatFragment was opened
    - started working on blocks
        - if a key my message is found, save the decision to GameManager and save the block to return to
        - if a block comes, get the saved decision from GameManager
        - update the Conversation's current block
        - if the block ends, return to the original block (if any)
[Tuesday, August 31st, 2021]
    - tried getting blocks to work:
        - if we come across a block, update a LiveData field in the messageViewModel
        - this will then fetch the upcoming messages again
        - some messages after the block may come in while the block is loading; implemented a stall (not tested)
[Wednesday, September 1st, 2021]
    - worked on blocks.
        - added LiveData current block to sentMessages
        - added preceding blocks List in GameManager
            - moved this to the individual conversation
        - added a currentBlocks stack to conversation, implemented using a List<>
            - added a TypeConverter for it
            - blocks can now be successfully loaded and displayed
        - removed the filtering by block for getSentMessages in messageDao
[Thursday, September 2nd, 2021]
    - blocks now work properly!
    - fixed issue where block would not load if chat was closed right before the block message
    - TODO: remember to reset the currentBlocks if the conversation is DONE
[Friday, September 3rd, 2021]
    - conversations now load from JSON file
    - temporarily removed recentValue for conversations
    - added action button to add new conversation
    - GameManager's key decisions are now saved and reloaded from SharedPreferences
    - can now set up all player names (this happens every time)
[Sunday, September 12th, 2021]
    - todo: fix bug where setup does not properly load only on first run
    - started working on adding typing animation
        - had to make the message adapter global scope inside ChatFragment
        - also tried making refresh more efficient; if only one new message is added, use notifyItemChanged.
            - if there is a size change > 1, notifyDataSetChanged.
[Tuesday, September 14th, 2021]
    - improved efficiency of updating messages inside recycler view
        - start/stop typing anim is updated using notifyItemInserted/notifyItemRemoved
        - so are the basic messages
[Friday, September 17th, 2021]
    - made chat recycler view populate from the bottom
        - also automatically jumps down if currently at the bottom of the chat
    - limited NPC message and my message max length using a quick & dirty method
[Monday, September 20th, 2021]
    - added jump down button
    - recycler view now scrolls down when keyboard is opened
[Tuesday, September 21st, 2021]
    - added sound effects for sending message and receiving message
[Friday, September 24th, 2021]
    - added profile pictures on Conversation rows and chat message rows
    - updated volume for receiving a message
[Saturday, September 25th, 2021]
    - discovered cause of recycler view bug; just don't have a large message at the length of the screen
[Sunday, September 26th, 2021]
    - removed loadSentMessages in MessageViewModel; only need getSentMessages
    - cleaned up outdated methods and imports
    - added action messages
    - added npc typing sound
[Tuesday, September 20th, 2021]
    - started working on notes
[Wednesday, October 6th, 2021]
    - fixed bug where next note prompt displayed incorrectly
    - support action bar is now hidden during note
    - notes are now fully functional
[Saturday, October 9th, 2021]
    - started working on an automated group advancement system
[Monday, October 11th, 2021]
    - added quick-group-finish button for testing
    - re-added last message updating -- must have been removed by accident
    - cannot reproduce bug where leaving during typing anim causes inconsistency. marking as resolved
    - cannot reproduce bug where the incorrect group advancement command was executed. marking as resolved
    - likely fixed bug where an inconsistency occurred after the note finished (note now finishes properly)
[Thursday, October 12th, 2021]
    - fixed bug where incrementing group via checkAdvance did not apply when re-entering the chat. by calling notifyDataSetChanged
    - fixed bug where AppCompatActionBar couldn't hide by moving it to the main thread
    - decrease fadeIn and fadeOut animation time
    - started working on backgrounds
    - remove unnecessary lines of code about checking if playRunnable is null
[Saturday, October 30th, 2021]
    - finished implementing backgrounds -- but slow and not tested
    - discovered big inconsistency bug: it is caused by our group skip button
        - fix this next time
[Tuesday, November 30th, 2021]
    - we back
    - tested backgrounds, still slow. will learn the debugger next
[Tuesday, May 2nd, 2022]
    - wrote out entire script for player 1 group 1
    - did some basic testing. looks like the group advancement algorithm is still glitchy
[Sunday, May 9th, 2022]
    - removed background functionality (too hard to maintain)
    - need to fix group advancement. added 2 lines to update conversation state but it's not really tested (commented with 'not tested')
[Thursday, May 20th, 2022]
    - re-familiarized myself with the code
        - still not sure why we need getUpcomingMessages and loadUpcomingMessages
    - figured out the bug that was happening when the note finished. there was a logic error in the playthread that started submitting
       new messages as soon as the note was submitted. probably just happening too fast
[Sunday, May 22nd, 2022]
    - bug: the first click on a note fragment does not bring up the "Next" text. I'm guessing it has something to do with switching focus
        to the fragment (ignoring for now)
    - investigated the group incrementing bug. because conversation is set to STATE_DONE, loading the next command. need to pause it.
        - need to check if the STATE_PAUSED is being set. if so, don't set to STATE_DONE when the chat is "finished"
        - Solved: getTag was getting an outdated version of the Conversation. Switched to a position-based click handler
    - the weird bug when the note closes still happens. it's hard to reproduce. IF ALL ELSE FAILS: just change notifyItemInserted to notifyDataSetChanged in typingAnim
        - moving on for now. it's hard to reproduce and i'm not sure what's causing it besides complicated ideas of multithreading
[Tuesday, May 24th, 2022]
    - i now believe the note inconsistency is caused because both the UI thread and the play thread are modifying the recyclerview data. i moved the submitMessage call out of
        displayNote() and is now called in the playthread
        - continue to test it. not sure if it works
    - tested blocks. they work well
    - updated conversation unread state when chat endstu
[Wednesday, May 25th, 2022]
    - fixed AVD waiting for debugger to attach issue, using a cold boot
    - re-enabled first-run dialogs
        - fixed issue where the dialogs only appear on second run
[Saturday, May 28th, 2022]
    - tried getting smiling face with tear emoji encoded in the project
        - it has unicode U+1f972 but Android can't render a 5-digit unicode
        - tried using https://stackoverflow.com/questions/19557026/how-to-display-5-digit-unicode-characters-such-as-a-speaker-u1f50a
            and http://www.russellcottrell.com/greek/utilities/SurrogatePairCalculator.htm but it does not work
        - now i'm thinking that android just can't support these emoijs, may need a textview that supports emojis like https://stackoverflow.com/a/49512524
TODO: finalize what causes the weird desync between open/incr commands. i've only seen it appear when re-building the app, but just make sure it doesn't happen by the user
    (ex. closing the app when the chat is done instead of going back to ConversationFragment)
[Sunday, May 29th, 2022]
    - finally figured out how to display 5-digit unicode emojis
        - added bundled-emoji dependency & init in MainActivity
    - i think i figured out why the edit text dialog were appearing at the wrong times
        - no need to observe all conversations; overlapping observers caused difficult-to-track behaviour
[Tuesday, May 31st, 2022]
    - added group 2 into json format
[Wednesday, June 1st, 2022]
    - confirmed that an independent npc message can follow a mymessage
[Thursday, June 9th, 2022]
    - added some more groups
[Monday, June 13th, 2022]
    - Updated ChatInfoFragment
        - removed nicknames, added descriptions and profile pictures
    - added customize player information (saved to shared preferences)
    - added timestamps
[Tuesday, June 14th, 2022]
    - added name placeholder replacements
[Thursday, June 16th, 2022]
    - added settings fragment
        - updated navigation
        - added player name update
    - replaced custom shared preferences with PreferenceManager default shared preferences for consistency
       between settings and GameManager
[Sunday, June 19th, 2022]
    - added "Schism" title on ConversationFragment, and "Character Information" on ChatInfoFragment
    - added name placeholders replacements in ChatInfoFragment description
    - tried updating conversation object from ChatFragment, since names were not being updated if the user closed the app without going back to
       ConversationFragment
        - too complicated to fix. is possible with storing name in shared preferences, and updating conversation object on reload, but too much work
        - also makes a small bug: if name is updated, then app is swiped up, since GameManager is updated, the description and naming will use new name, but
           just the display will use old name (since conversation object is not updated)
[Friday, June 24th, 2022]
    - wrote a bunch more groups


TODO
    - backgrounds and mediaplayer sounds
    - loading screen when populating conversations/messages
    - fast mode
    - I'm thinking that we can't have multiple blocks in one group, since the gaem fetches all messages under that block name
        - we can fix this by giving each block a unique ID. we will increment for each block
        - this ID is reset to 1 on every group

Things to check at the end:
    - check if messages & conversation state are saved if the user leaves by closing the app instead of returning to the ConversationFragment
        - messages are saved. i think conversations might be okay too, since it will just open the chat with state RUNNING, then set to DONE when there are no more upcoming messaegs
        - VERDICT: Messages are saved. Conversation preferences (name, bgState) are NOT saved. Conversation state works out nicely since states are managed in ConversationFragment
    - check if we are waiting for ALL messages to be unpacked from JSON before our first chat starts. If so, it may take a while -- loading screen may be needed